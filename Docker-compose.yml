version: '3.1'
services:
  db:
    image: mariadb:latest
    container_name: my_mariadb
    environment:
      MARIADB_DATABASE: bdtest
      MARIADB_USER: docker
      MARIADB_ROOT_PASSWORD: lampi
      MARIADB_PASSWORD: lampi
      MARIADB_ROOT_HOST: '%'
    ports:
      - "3305:3306"
    volumes:
      - "./mariadb-data/data:/var/lib/mysql/data/"
      - "./mariadb-data/logs:/var/lib/mysql/logs/"

  msusuario:
   image: msusuario:latest
   restart: always
   environment:
     SPRING_DATASOURCE_URL : jdbc:mariadb://db:3306/bdtest
     SPRING_DATASOURCE_USERNAME : docker
     SPRING_DATASOURCE_PASSWORD : lampi
     KAFKA_BOOTSTRAP_SERVERS: localhost:9092
   ports:
     - "8080:8080"
   depends_on:
     - db
     - kafka

  msitem:
    image: msitem:latest
    restart: always
    environment:
      SPRING_DATASOURCE_URL : jdbc:mariadb://db:3306/bdtest
      SPRING_DATASOURCE_USERNAME : docker
      SPRING_DATASOURCE_PASSWORD : lampi
      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
    ports:
      - "8082:8082"
    depends_on:
      - db
      - kafka

  mscarrinho: 
    image: mscarrinho:latest
    restart: always
    environment:
      SPRING_DATASOURCE_URL : jdbc:mariadb://db:3306/bdtest
      SPRING_DATASOURCE_USERNAME : docker
      SPRING_DATASOURCE_PASSWORD : lampi
      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
    ports:
      - "8081:8081"
    depends_on:
      - db
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9094:9094"

networks:
  kafka-net:
    driver: bridge

volumes:
  db_data:
